{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","add","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","c","type","value","onChange","target","GifGridItem","id","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","useFetchGifs","key","GifExpertApp","categories","setCategories","t","i","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAW,IAAVC,EAAS,EAATA,IAAS,EAEEC,mBAAS,IAFX,mBAE3BC,EAF2B,KAEfC,EAFe,KAiBlC,OACI,0BAAMC,SAVW,SAAAC,GACjBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAK,SAAAS,GAAC,OAAKP,GAAL,mBAAoBO,OAC1BN,EAAc,OAMd,2BACIO,KAAK,OACLC,MAAOT,EACPU,SAlBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,YCIhBG,EAVK,SAAC,GAAqB,EAApBC,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,IAE7B,OACI,yBAAKC,UAAU,8CACX,yBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,2BAAIA,K,uBCPHK,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbN,EADa,iDACmCO,UAAUF,GAD7C,8DAEAG,MAAMR,GAFN,cAEbS,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHhB,GAAIgB,EAAIhB,GACRC,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIC,cAAN,aAAE,EAAYC,iBAAiBhB,QATvB,kBAaZY,GAbY,4CAAH,sDCIPK,EAAU,SAAC,GAAgB,IAAfZ,EAAc,EAAdA,SAAc,ECDX,SAACA,GAAc,IAAD,EAEZrB,mBAAS,CAC/B2B,KAAM,GACNO,SAAS,IAJyB,mBAE/BC,EAF+B,KAExBC,EAFwB,KAkBtC,OAXAC,qBAAW,WACPjB,EAAQC,GACHiB,MAAK,SAAAX,GAEFS,EAAS,CACLT,KAAMA,EACNO,SAAS,SAGtB,CAACb,IAEGc,EDfyBI,CAAalB,GAAhCU,EAFsB,EAE5BJ,KAAcO,EAFc,EAEdA,QAGrB,OACI,oCACI,wBAAIjB,UAAU,yCAAyCI,GACrDa,GAAW,uBAAGjB,UAAU,oCAAb,WACb,yBAAKA,UAAU,cAEPc,EAAOF,KAAI,SAAAC,GAAG,OACV,kBAAC,EAAD,eACIU,IAAKV,EAAIhB,IACLgB,UEdnBW,EAAe,WAAO,IAAD,EAEMzC,mBAAS,CAAC,aAFhB,mBAEvB0C,EAFuB,KAEXC,EAFW,KAI9B,OACI,oCACI,iDACA,kBAAC,EAAD,CAAa5C,IAAK4C,IAClB,6BAEA,4BACMD,EAAWb,KAAI,SAACe,EAAGC,GAAJ,OACb,kBAAC,EAAD,CACIxB,SAAUuB,EACVJ,IAAKI,UCb7BE,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.cee6ab0b.chunk.js","sourcesContent":["import React, {useState} from \"react\"\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({add}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        if(inputValue.trim().length > 2) {\r\n            add( c => [inputValue, ...c]);\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n        </form>\r\n    )\r\n\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    add: PropTypes.func.isRequired\r\n}\r\n","import React from 'react';\r\n\r\nconst GifGridItem = ({id, title, url}) => {\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeInLeft\">\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GifGridItem;","export const getGifs = async (category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=5&api_key=vgiv1QAAA6hTO6RXLHCWYVW8zgFctxS7`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n}","import React from \"react\";\r\nimport GifGridItem from \"./GifGridItem\";\r\nimport {useFetchGifs} from \"../hooks/useFetchGifs\";\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    const {data: images, loading} = useFetchGifs(category);\r\n\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeInLeft\">{category}</h3>\r\n            { loading && <p className=\"animate__animated animate__flash\">Loading</p> }\r\n            <div className=\"card-grid \">\r\n                {\r\n                    images.map(img => (\r\n                        <GifGridItem\r\n                            key={img.id}\r\n                            {...img}\r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}","import {useEffect, useState} from \"react\";\r\nimport {getGifs} from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n        getGifs(category)\r\n            .then(data => {\r\n\r\n                setState({\r\n                    data: data,\r\n                    loading: false\r\n                })\r\n            })\r\n    }, [category])\r\n\r\n    return state;\r\n};","import React, {useState} from \"react\";\r\nimport {AddCategory} from \"./components/AddCategory\";\r\nimport {GifGrid} from \"./components/GifGrid\";\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['Totodile']);\r\n\r\n    return (\r\n        <>\r\n            <h2>Buscador de Gifs!</h2>\r\n            <AddCategory add={setCategories}/>\r\n            <hr/>\r\n\r\n            <ol>\r\n                { categories.map((t, i) => (\r\n                    <GifGrid\r\n                        category={t}\r\n                        key={t}\r\n                    />\r\n                )) }\r\n            </ol>\r\n        </>\r\n        )\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {GifExpertApp} from \"./GifExpertApp\";\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}